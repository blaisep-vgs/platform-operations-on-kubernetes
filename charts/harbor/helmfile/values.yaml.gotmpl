nameOverride: harbor
fullnameOverride: harbor

service:
  type: ClusterIP
{{- if .Values._.ingress.enabled }}
  tls:
    enabled: true
    existingSecret: harbor-tls
    notaryExistingSecret: notary-tls
ingress:
  enabled: true
  hosts:
    core: {{ requiredEnv "HARBOR_DNS" }}
    notary: {{ env "HARBOR_DNS" }}
  annotations:
    ingress.kubernetes.io/ssl-redirect: 'true'
    ingress.kubernetes.io/proxy-body-size: '0'
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
externalURL: https://{{ env "HARBOR_DNS" }}
{{- else }}
  tls:
    enabled: true
    commonName: harbor

externalURL: https://harbor:8443
{{- end }}


persistence:
  enabled: true
  persistentVolumeClaim:
    database:
      size: 10Gi
    redis:
      size: 10Gi
  imageChartStorage:
{{- if or (eq (env "CLOUD_PROVIDER") "aws") (not (env "CLOUD_PROVIDER")) }}
    disableredirect: true
    type: s3
    s3:
      accesskey: {{ env "HARBOR_S3_ACCESS_KEY" | default (env "MINIO_ACCESS_KEY") }}
      secretkey: {{ env "HARBOR_S3_SECRET_KEY" | default (env "MINIO_SECRET_KEY") }}
      {{- if not (env "CLOUD_PROVIDER") }}
      regionendpoint: http://minio.minio.svc.cluster.local:9000
      {{- else if (env "HARBOR_S3_REGION") }}
      region: {{ env "HARBOR_S3_REGION" }}
      {{- end }}
      bucket: {{ env "HARBOR_IMAGE_STORAGE_BUCKET" | default "harbor" }}
{{- else if eq (env "CLOUD_PROVIDER") "gcp" }}
    disableredirect: false
    type: gcs
    gcs:
      bucket: {{ requiredEnv "HARBOR_IMAGE_STORAGE_BUCKET" }}
      encodedkey: {{ requiredEnv "HARBOR_GCP_CREDENTIALS" }}
{{- end }}

harborAdminPassword: {{ requiredEnv "HARBOR_ADMIN_PASSWORD" }}
secretKey: {{ requiredEnv "HARBOR_SECRET_KEY" }}
notary:
  enabled: false
  secretName: notary-certs
database:
  internal:
    password: {{ requiredEnv "HARBOR_DATABASE_PASSWORD" }}

userSettings:
  self_registration: "false"
{{- if eq (env "AUTH_TYPE") "oidc" }}
  auth_mode: oidc_auth
  oidc_client_id: {{ requiredEnv "HARBOR_OIDC_CLIENT_ID" }}
  oidc_client_secret: {{ requiredEnv "HARBOR_OIDC_CLIENT_SECRET" }}
  oidc_endpoint: {{ requiredEnv "HARBOR_OIDC_URL" }}
{{- end }}

core:
  secret: {{ requiredEnv "HARBOR_INTERNAL_SECRET" }}
  secretKey: {{ requiredEnv "HARBOR_CORE_SECRET_KEY" }}
  {{- if env "HARBOR_CSRFKEY" }}
  csrfKey: {{ env "HARBOR_CSRFKEY" }}
  {{- end }}

{{- if env "ROOT_CA_BUNDLE" }}
caBundleSecretName: root-ca-bundle
{{- end }}

jobservice:
  secret: {{ requiredEnv "HARBOR_INTERNAL_SECRET" }}
registry:
  secret: {{ requiredEnv "HARBOR_INTERNAL_SECRET" }}