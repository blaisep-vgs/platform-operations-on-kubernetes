nameOverride: grafana
fullnameOverride: grafana

image:
  repository: paulczar/grafana
  tag: latest
  pullPolicy: Always

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi

{{- if .Values.charts.reloader.enabled }}
podAnnotations:
  secret.reloader.stakater.com/reload: "grafana-ini"
  configmap.reloader.stakater.com/reload: "grafana-dashboardproviders"
{{- end }}

{{- if .Values._.ingress.enabled }}
ingress:
  enabled: true
  hosts:
    - name: "{{ env "GRAFANA_DNS" }}"
      paths: ["/"]
      tls: true
      tlsSecret: grafana-tls
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    ingress.kubernetes.io/ssl-redirect: 'true'
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
{{- end }}

admin:
  password: {{ requiredEnv "GRAFANA_ADMIN_PASSWORD" }}

config:
  useGrafanaIniFile: true
  grafanaIniSecret: grafana-ini

dashboardsProvider:
  enabled: true
  configMapName: grafana-dashboardproviders

# dashboardsConfigMaps: ["grafana-dashboards"]

datasources:
  secretName: grafana-datasources

# dashboards:
#   default:
#     prometheus-stats:
#       gnetId: 2
#       datasource: {{ env "ENV_NAME" }}-prometheus
#     pks-stats:
#       gnetId: 10000
#       datasource: {{ env "ENV_NAME" }}-prometheus
#     spring-jvm-actuator:
#       gnetId: 4701
#       datasource: {{ env "ENV_NAME" }}-prometheus
#     loki-promtail:
#       gnetId: 10880
#       datasource: {{ env "ENV_NAME" }}-prometheus

livenessProbe:
  enabled: true
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1