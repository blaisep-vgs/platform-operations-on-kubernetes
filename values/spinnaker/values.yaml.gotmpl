# Configure your Docker registries here
dockerRegistries:
- name: dockerhub
  address: https://index.docker.io
  repositories:
    - paulczar/spring-helloworld
  username: ~
  password: ~

kubeConfig:
  omittedNameSpaces:
    - kube-system
    - kube-public
  onlySpinnakerManaged:
    enabled: true

# Redis password to use for the in-cluster redis service
# Redis is not exposed publically
redis:
  password: bad-redis-password
  nodeSelector: {}
  cluster:
    enabled: false
  master:
    persistence:
      enabled: true

minio:
  enabled: false

halyard:
  spinnakerVersion: 1.16.2
  image:
    tag: 1.28.0

  {{- if .Values.ingress.enabled }}
  additionalProfileConfigMaps:
    create: true
    data:
      gate-local.yml: |-
        server:
          tomcat:
            protocolHeader: X-Forwarded-Proto
            remoteIpHeader: X-Forwarded-For
            internalProxies: .*
            httpsServerPort: X-Forwarded-Port
  {{- end }}
  {{- if eq (env "CLOUD_PROVIDER") "gcp" }}
gcs:
  enabled: true
  secretName: gcs-creds
  project: {{ requiredEnv "SPINNAKER_GCS_PROJECT" }}
  bucket: {{ requiredEnv "SPINNAKER_GCS_BUCKET"}}
{{- else }}
# existing minio is used to store artifacts
s3:
  enabled: true
  bucket: "spinnaker"
  endpoint: http://minio.minio.svc.cluster.local:9000
  accessKey: "{{ requiredEnv "MINIO_ACCESS_KEY" }}"
  secretKey: "{{ requiredEnv "MINIO_SECRET_KEY" }}"
  extraArgs:
    - "--path-style-access true"
{{- end }}

{{- if .Values.ingress.enabled }}
ingress:
  enabled: true
  host: {{ requiredEnv "SPINNAKER_DNS" }}
  tls:
    - secretName: spin-deck-cert
      hosts:
        - {{ requiredEnv "SPINNAKER_DNS" }}
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/ssl-redirect: 'true'
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/acme-challenge-type: dns01
    cert-manager.io/acme-dns01-provider: prod-clouddns
    kubernetes.io/tls-acme: 'true'

ingressGate:
  enabled: true
  host: {{ requiredEnv "SPINNAKER_GATE_DNS" }}
  tls:
    - secretName: spin-gate-cert
      hosts:
        - {{ requiredEnv "SPINNAKER_GATE_DNS" }}
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/ssl-redirect: 'true'
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/acme-challenge-type: dns01
    cert-manager.io/acme-dns01-provider: prod-clouddns
    kubernetes.io/tls-acme: 'true'
{{- else }}
ingress:
  enabled: false

ingressGate:
  enabled: false
{{- end }}

spinnakerFeatureFlags:
  - artifacts